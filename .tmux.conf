set-option -g default-shell /bin/zsh

# Enables mouse control (because we're not barbarians)
set -g mouse on

#############################
# prefix settings ###########
#############################

# changes prefix to C-a instead of C-b
set -g prefix C-a
unbind C-b

# Allows you to do C-a C-a when you want to send C-a to a program inside tmux
bind C-a send-prefix


#############################
# keyboard shortcuts ########
#############################

# ESC key stops working as Alt
set -s escape-time 0

# Makes <prefix>x close the pane without asking
unbind x
bind x kill-pane

# Makes <prefix>X (uppercase) close the entire session
bind X kill-session

# <prefix>r to reload tmux config file
bind r source-file ~/.tmux.conf \; display "Config reloaded!"

# Easier vertical and horizontal split
bind | split-window -h
bind - split-window -v

# Quickly alternate between tmux windows
bind -n M-h select-window -t :-
bind -n M-l select-window -t :+

# Use vi keys in copy mode
# Allows not only hjkl, but also many movements like f, w, b, etc...
# You can even type / to find
setw -g mode-keys vi

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# The above bindings take away the ability to clear the screen with C-l
# So now we we'll bind a way to do <prefix>C-l do clear the screen
bind C-l send-keys 'C-l'
bind C-k send-keys 'C-k'


#############################
# panes and windows #########
#############################

# make them start counting at 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# prevents automatic renaming of panes
set -g automatic-rename off

# Resize panes
bind-key -r < resize-pane -L 3
bind-key -r > resize-pane -R 3
bind-key -r + resize-pane -U 1
bind-key -r = resize-pane -D 1

# increase history limit
set-option -g history-limit 20000


#############################
# tmux appearance ###########
#############################

# Make 256 colors work correctly on apps inside tmux
set -g default-terminal "xterm-256color"

# Make TRUE COLOR work
set-option -ga terminal-overrides ",xterm-256color:Tc"

# Colors for the inactive pane borders
set-option -g pane-border-bg default
set-option -g pane-border-fg default

# Colors for the ACTIVE pane borders
set-option -g pane-active-border-bg default
set-option -g pane-active-border-fg green

# Colors for the ACTIVE and INACTIVE pane background
set -g window-style 'bg=colour234'
set -g window-active-style 'bg=colour16'

# Status bar with dark green background and white text
set -g status-bg colour22
set -g status-fg colour15


#############################
# window list appearance ####
#############################

# Default window style
setw -g window-status-style "bg=default, fg=default"

# Style for the current window
setw -g window-status-current-style "bg=colour4, fg=colour15"

# Put window list in the center
set -g status-justify left


#############################
# status bar left & right ###
#############################

# Makes the left side wider to fit more text
set -g status-left-length 70

# Set the width of the right side
set -g status-right-length 70

# What info appears on the left of the status bar
set -g status-left "[#S] "

# What info appears on the right of the status bar
set -g status-right "<#T>"

